// создание таблицы

CREATE TABLE TestTable(
	ID serial PRIMARY_KEY,
	key_ID INTEGER,
	age INTEGER CHECK (age >= 18),
	char VARCHAR(256) UNIQUE, // только уникальные значения
	bool BOOLEAN NOT NULL,
	float REAL,
	byte  BYTEA,
	datetime date,

FOREIGN KEY (key_ID) REFERENCES foreign_table(foreign_ID)
);


"SELECT something.*, steering_type.steering_type_name AS steering FROM something JOIN steering_type ON something.steering_type_id = steering_type.ID"

SELECT * FROM employees
INNER JOIN departments ON employees.department_id = departments.department_id;

Этот запрос извлечет записи из таблиц сотрудников и отделов, в которых есть совпадение по столбцу department_id.

SELECT * FROM employees
LEFT JOIN departments ON employees.department_id = departments.department_id;

Этот запрос извлечет все записи из таблицы сотрудников и только соответствующие записи из таблицы отделов.

SELECT * FROM employees
RIGHT JOIN departments ON employees.department_id = departments.department_id;

This query will retrieve all records from the departments table and only the matching records from the employees table.
Этот запрос извлечет все записи из таблицы отделов и только соответствующие записи из таблицы сотрудников.


SELECT 
    ID,
    Username,
    TimeCreate,
    TimeExpire,
    CASE 
        WHEN TimeExpire < CURRENT_TIMESTAMP THEN TRUE
        ELSE FALSE
    END AS "Is Expire"
FROM 
    Users;
	
	SELECT 
    ID,
    Username,
    TimeCreate,
    TimeExpire,
    (TimeExpire < CURRENT_TIMESTAMP) AS "Is Expire"
FROM 
    Users;
	
	
	
	<Window x:Class="GIA_practice1.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:GIA_practice1"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800">
    <Grid>
        <Grid Margin="0,0,634,0" HorizontalAlignment="Right" Width="160">
            <CheckBox Name="two" Content="2 места" Margin="0,59,0,344"/>
            <CheckBox Name="four" Content="4-6 мест" Margin="0,95,0,308"/>
            <CheckBox Name="eight" Content="8 и более мест" Margin="0,126,0,277"/>
            <Button Content="НАЖМИ" Margin="0,162,0,217" HorizontalAlignment="Right" Width="160" Click="UpdateClick"/>
        </Grid>

        <Grid HorizontalAlignment="Left" Width="630" Margin="171,0,0,0">
            <ListBox Name="MainListBox">
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <UniformGrid Columns="3" MaxWidth="600" MaxHeight="350" MinHeight="100"/>
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Border Background="#CCCCCC" CornerRadius="3" Width="300" Height="200">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="200"/>
                                    <RowDefinition Height="50"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <StackPanel>
                                    <Image Grid.Row="0" VerticalAlignment="Top" HorizontalAlignment="Left" Source="{Binding image}" Width="100"/>
                                    <TextBlock Grid.Row="1" Text="{Binding Name}" TextWrapping="WrapWithOverflow" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    <TextBlock Grid.Row="2" Text="{Binding Steering}" TextWrapping="WrapWithOverflow"/>
                                </StackPanel>
                            </Grid>
                        </Border>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </Grid>
    </Grid>
</Window>
